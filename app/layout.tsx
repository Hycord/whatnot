"use client";
import localFont from "next/font/local";
import "./globals.css";
import { SocketProvider } from "@/lib/contexts/SocketContext";
import { useReward } from "react-rewards";
import { degreeToRadian } from "@hycord/math";
import { confettiConfig, hydraConfig } from "@/lib/types";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {


  const { reward: confetti } = useReward("confetti", "confetti", confettiConfig);
  const { reward: hydras } = useReward("hydras", "emoji", hydraConfig);



  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased w-screen h-screen`}
      >
        <SocketProvider
          onTrigger={(type) => {
            switch (type) {
              case "confetti":
                confetti();
                break;
              case "hydras":
                hydras();
                break;
            }
          }}>
          {children}
        </SocketProvider>
      </body>
    </html>
  );
}
